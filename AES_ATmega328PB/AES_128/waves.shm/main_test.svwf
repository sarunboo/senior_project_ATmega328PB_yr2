
#
# Mnemonic Maps
#
mmap new  -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new  -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}

array unset createdGroup
array set createdGroup {}
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.TESTCASE[3:0]}]}
	} ]]
waveform format $id -color #00ffff
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.expected_out[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.clk}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.data_in[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.data_out[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.key[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.key_s[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.key_s0[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.key_s1[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.key_s2[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.key_s3[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.key_s4[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.key_s5[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.key_s6[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.key_s7[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.key_s8[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.key_s9[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.r_data_out[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.r0_data_out[127:0]}]}
	} ]]
waveform hierarchy collapse $id
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.r1_data_out[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.r2_data_out[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.r3_data_out[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.r4_data_out[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.r5_data_out[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.r6_data_out[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.r7_data_out[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.r8_data_out[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_main_tb.uut.r9_data_out[127:0]}]}
	} ]]

waveform xview limits 0 1000000ps
