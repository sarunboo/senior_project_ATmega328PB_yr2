
#
# Mnemonic Maps
#
mmap new  -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new  -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}

array unset createdGroup
array set createdGroup {}
#
# Groups
#
if {[catch {group get -using [list {CPU Signals}]}]} {
set createdGroup([list {CPU Signals}]) 1
catch {group new -name {CPU Signals} -overlay 0}
}
if {[catch {group get -using [list {Digital Input Bypass}]}]} {
set createdGroup([list {Digital Input Bypass}]) 1
catch {group new -name {Digital Input Bypass} -overlay 0}
}
if {[catch {group get -using [list {Alt Function Mux}]}]} {
set createdGroup([list {Alt Function Mux}]) 1
catch {group new -name {Alt Function Mux} -overlay 0}
}
if {[catch {group get -using [list {Port Output}]}]} {
set createdGroup([list {Port Output}]) 1
catch {group new -name {Port Output} -overlay 0}
}
if {[info exists createdGroup([list {CPU Signals}])]} {
group using {CPU Signals}
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {gpio_PD_tb.Port_D_inst.ireset}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.cp2}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.IO_Addr[5:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.dbus_in[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.iowe}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.iore}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.out_en}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.dbus_out[7:0]}]} ]
}

if {[info exists createdGroup([list {Digital Input Bypass}])]} {
group using {Digital Input Bypass}
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {gpio_PD_tb.Port_D_inst.pinD_i[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.DID[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.DID_o[7:0]}]} ]
}

if {[info exists createdGroup([list {Alt Function Mux}])]} {
group using {Alt Function Mux}
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {gpio_PD_tb.Port_D_inst.ddrD[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.PUD}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.portD[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.PUOED[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.PUOVD[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.DDOED[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.DDOVD[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.PVOED[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.PVOVD[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.DIEOED[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.DIEOVD[7:0]}]} ]
}

if {[info exists createdGroup([list {Port Output}])]} {
group using {Port Output}
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {gpio_PD_tb.Port_D_inst.pu_D[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.pu_D_int[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.dd_D[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.pv_D[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.die_D[7:0]}]} ] \
    [subst  {[format {gpio_PD_tb.Port_D_inst.DDR_XCK0}]} ]
}


set groupId0 [waveform add -groups {{CPU Signals}}]
set gpGlist0 [waveform hierarchy contents $groupId0]
set gpID0 [lindex $gpGlist0 0]
foreach {name attrs} [subst  {
    {[format {gpio_PD_tb.Port_D_inst.ireset}]} {}
    {[format {gpio_PD_tb.Port_D_inst.cp2}]} {}
    {[format {gpio_PD_tb.Port_D_inst.IO_Addr[5:0]}]} {}
    {[format {gpio_PD_tb.Port_D_inst.dbus_in[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.iowe}]} {}
    {[format {gpio_PD_tb.Port_D_inst.iore}]} {}
    {[format {gpio_PD_tb.Port_D_inst.out_en}]} {}
    {[format {gpio_PD_tb.Port_D_inst.dbus_out[7:0]}]} {-radix %b}
}] childcmds {
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
} {
    set expected [ join [waveform signals -format path $gpID0] ]
    if {[string equal $name $expected] || $name == "cdivider"} {
        if {$attrs != ""} {
            eval waveform format $gpID0 $attrs
        }
        if { $childcmds != ""} {
            eval $childcmds
        }
    }
    set gpGlist0 [lrange $gpGlist0 1 end]
    set gpID0 [lindex $gpGlist0 0]
}

set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.TESTCASE[3:0]}]}
	} ]]
waveform format $id -radix %d -color #00ffff

set groupId0 [waveform add -groups {{Digital Input Bypass}}]
set gpGlist0 [waveform hierarchy contents $groupId0]
set gpID0 [lindex $gpGlist0 0]
foreach {name attrs} [subst  {
    {[format {gpio_PD_tb.Port_D_inst.pinD_i[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.DID[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.DID_o[7:0]}]} {-radix %b}
}] childcmds {
    {}
    {}
    {}
} {
    set expected [ join [waveform signals -format path $gpID0] ]
    if {[string equal $name $expected] || $name == "cdivider"} {
        if {$attrs != ""} {
            eval waveform format $gpID0 $attrs
        }
        if { $childcmds != ""} {
            eval $childcmds
        }
    }
    set gpGlist0 [lrange $gpGlist0 1 end]
    set gpID0 [lindex $gpGlist0 0]
}
waveform hierarchy collapse $groupId0

set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.AIOD[7:0]}]}
	} ]]
waveform format $id -radix %b

set groupId0 [waveform add -groups {{Alt Function Mux}}]
set gpGlist0 [waveform hierarchy contents $groupId0]
set gpID0 [lindex $gpGlist0 0]
foreach {name attrs} [subst  {
    {[format {gpio_PD_tb.Port_D_inst.ddrD[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.PUD}]} {}
    {[format {gpio_PD_tb.Port_D_inst.portD[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.PUOED[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.PUOVD[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.DDOED[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.DDOVD[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.PVOED[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.PVOVD[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.DIEOED[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.DIEOVD[7:0]}]} {-radix %b}
}] childcmds {
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
} {
    set expected [ join [waveform signals -format path $gpID0] ]
    if {[string equal $name $expected] || $name == "cdivider"} {
        if {$attrs != ""} {
            eval waveform format $gpID0 $attrs
        }
        if { $childcmds != ""} {
            eval $childcmds
        }
    }
    set gpGlist0 [lrange $gpGlist0 1 end]
    set gpID0 [lindex $gpGlist0 0]
}


set groupId0 [waveform add -groups {{Port Output}}]
set gpGlist0 [waveform hierarchy contents $groupId0]
set gpID0 [lindex $gpGlist0 0]
foreach {name attrs} [subst  {
    {[format {gpio_PD_tb.Port_D_inst.pu_D[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.pu_D_int[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.dd_D[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.pv_D[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.die_D[7:0]}]} {-radix %b}
    {[format {gpio_PD_tb.Port_D_inst.DDR_XCK0}]} {}
}] childcmds {
    {}
    {}
    {}
    {}
    {}
    {}
} {
    set expected [ join [waveform signals -format path $gpID0] ]
    if {[string equal $name $expected] || $name == "cdivider"} {
        if {$attrs != ""} {
            eval waveform format $gpID0 $attrs
        }
        if { $childcmds != ""} {
            eval $childcmds
        }
    }
    set gpGlist0 [lrange $gpGlist0 1 end]
    set gpID0 [lindex $gpGlist0 0]
}

set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.SLEEP}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.RXEN0}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.TXD0}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.OC0A_EN}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.OC0B_EN}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.OC2B_EN}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.OC3A_EN}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.OC3B_EN}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.OC4A_EN}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.OC4B_EN}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.XCK0_OUT}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.OC0A}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.OC0B}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.OC2B}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.OC3B}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.OC4B}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.OC4A}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.OC3A}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.UMSEL}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.TXEN0}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.PCINT[7:0]}]}
	} ]]
waveform format $id -radix %b
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.INT1_EN}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.INT0_EN}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.PCIE2}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {gpio_PD_tb.Port_D_inst.AINxD[1:0]}]}
	} ]]
waveform format $id -radix %b

waveform xview limits 0 10245130ps
